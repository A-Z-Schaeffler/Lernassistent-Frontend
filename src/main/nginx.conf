events { }

http {
    upstream llm_api {
        server llm_api:9191;
    }

    upstream extract_pdf {
        server extract_pdf:5001;
    }

    upstream main_controller {
        server main_controller:5002; 
    }

    # upstream app_with_db {
    #     server app_with_db:5003;
    # }

    server {
        listen 80;
        server_name maguna.me;

        # Redirect all HTTP traffic to HTTPS
        return 301 https://$host$request_uri;

    }

    server {
        listen 443 ssl;
        server_name maguna.me;

        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/maguna.me/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/maguna.me/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/maguna.me/chain.pem;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers off;

        # Serve the frontend (static files) and make Dashboard.html the root
        location / {
            root /usr/share/nginx/html;
            try_files $uri /Dashboard.html;
            index Dashboard.html;

            # Enable caching for static assets
            location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg)$ {
                expires 6M;  # Cache for 6 months
                access_log off;
                add_header Cache-Control "public";
            }
        }

        # Route for LLM API
        location /llm_api/ {
            proxy_pass http://llm_api/;
        }

        # Route for Extract PDF
        location /extract_pdf/ {
            proxy_pass http://extract_pdf/;
        }

        # Route for Main Controller
        location /main_controller/ {
            proxy_pass http://main_controller/;
        }

        # Route for App with DB (commented out)
        # location /app_with_db/ {
        #     proxy_pass http://app_with_db/;
        # }

        # Handle Certbot ACME challenge requests
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
        }
    }
}
